// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  USER
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String         @unique
  role          UserRole       @default(USER)
  salt          String
  password      String
  notifications Notification[]
  auditLogs     AuditLog[]
}

model Session {
  objId     String   @id @default(auto()) @map("_id") @db.ObjectId
  id        String   @unique
  sid       String   @unique
  data      String
  expiresAt DateTime
}

enum NotificationType {
  TEST
}

model Notification {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  type       NotificationType
  metadata   Json
  receiver   User             @relation(fields: [receiverId], references: [id], onDelete: Cascade)
  receiverId String           @db.ObjectId

  readAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AuditAction {
  LOGIN
  LOGOUT
}

model AuditLog {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  action         AuditAction
  user           User        @relation(fields: [userId], references: [id])
  userId         String      @db.ObjectId
  metadata       Json        @default("{}")
  userDeviceInfo Json        @default("{}")
  response       Json        @default("{}")
  ipAddress      String?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}
