name: Build and Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Set to "latest" for main branch, or branch name for other branches
  IMAGE_TAG: ${{ github.ref_name == 'main' && 'latest' || github.ref_name }}

jobs:
  build-and-publish-client:
    name: Build and Publish Client Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create ECR Repository if not exists
        id: create-repository
        uses: int128/create-ecr-repository-action@v1
        with:
          repository: ${{ github.repository }}/client
          lifecycle-policy: ci/ecr/lifecycle-policy.json

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Infer Tag from Branch
        id: infer-tag
        # Get the branch name from the ref, and replace / with - to make it a valid tag
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          if [[ $BRANCH_NAME == "main" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo $BRANCH_NAME | sed -e 's/\//-/g')" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/client/Dockerfile
          pull: true
          push: true
          provenance: true
          build-args: |
            VITE_API_BASE_URL=${{ vars.CLIENT_VITE_API_BASE_URL }}
          tags: >
            ${{ steps.create-repository.outputs.repository-uri }}:${{ steps.infer-tag.outputs.tag }},
            ${{ steps.create-repository.outputs.repository-uri }}:${{ github.sha }}

  build-and-publish-server:
    name: Build and Publish Server Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create ECR Repository if not exists
        id: create-repository
        uses: int128/create-ecr-repository-action@v1
        with:
          repository: ${{ github.repository }}/server
          lifecycle-policy: ci/ecr/lifecycle-policy.json

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Infer Tag from Branch
        id: infer-tag
        # Get the branch name from the ref, and replace / with - to make it a valid tag
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          if [[ $BRANCH_NAME == "main" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo $BRANCH_NAME | sed -e 's/\//-/g')" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/server/Dockerfile
          pull: true
          push: true
          provenance: true
          tags: >
            ${{ steps.create-repository.outputs.repository-uri }}:${{ steps.infer-tag.outputs.tag }},
            ${{ steps.create-repository.outputs.repository-uri }}:${{ github.sha }}
